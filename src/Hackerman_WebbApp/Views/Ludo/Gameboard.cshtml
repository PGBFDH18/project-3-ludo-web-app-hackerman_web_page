@model Hackerman_WebbApp.Models.GameModel
@{
    ViewData["Title"] = "Gameboard";
}
<link type="text/css" rel="stylesheet" href="~/css/style.css" />
<div class="gameInfo">

    <div class="currentPlayer">@Model.Player.Name</div>
    <div class="dice">
        <div class="diceDot" id="center"></div>
        <div class="diceDot" id="leftUpper"></div>
        <div class="diceDot" id="leftMiddle"></div>
        <div class="diceDot" id="leftLower"></div>
        <div class="diceDot" id="rightUpper"></div>
        <div class="diceDot" id="rightMiddle"></div>
        <div class="diceDot" id="rightLower"></div>
    </div>
    <div>
        @if (Model.DiceThrow == 0)
        {
            <form action="rolldice" method="get">
                <input type="submit" class="button" value="Roll Dice" />

            </form>

        }
        else
        {
            <form action="rolldice" method="get">
                <input type="submit" class="button" value="Roll Dice" disabled />

            </form>
        }
    </div>
    <div>
        @if (Model.DiceThrow != 0)
        {

            <form action="movepiece" method="get">
                <input asp-for="MovePiece.PlayerId" type="hidden" />
                <input asp-for="DiceThrow" type="hidden" />
                <select asp-for="MovePiece.PieceId" id="playercolor">
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option value="3">3</option>
                    <option value="4">4</option>
                </select>
                <input id="movePiece" type="submit" class="button" value="Move Piece" />
            </form>
        }
        else
        {
            <form action="movepiece" method="get">
                <input asp-for="MovePiece.PlayerId" type="hidden" />
                <input asp-for="DiceThrow" type="hidden" />
                <select asp-for="MovePiece.PieceId" id="playercolor">
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option value="3">3</option>
                    <option value="4">4</option>
                </select>
                <input id="movePiece" type="submit" class="button" value="Move Piece" disabled/>
            </form>
        }
    </div>
</div>


<div class="board">
    <div class="wing" id="leftWing">
        @for (int i = 14; i <= 19; i++)
        {
            bool pieceFound = false;
            if (Model.PlayerList != null)
            {
                foreach (var player in Model.PlayerList)
                {
                    foreach (var piece in player.Piece)
                    {
                        int playerPosition = piece.Position + player.StartPosition;
                        if (playerPosition > 52)
                        {
                            playerPosition -= 52;
                        }
                        if (playerPosition == i && !pieceFound && piece.State == 1)
                        {
                            string playerId = "brick player" + (player.Id + 1).ToString();
                            string pieceId = "piece " + piece.PieceId.ToString();
                            <div class="field" id="tile @i">
                                <div class="@playerId" id="@pieceId"></div>
                            </div>
                            pieceFound = true;
                        }
                    }
                }
            }
            if (!pieceFound)
            {
                <div class="field" id="tile @i"></div>
            }

        }
        @for (int i = 1; i <= 6; i++)
        {
            if (i == 1)
            {
                <div class="field player2" id="tile 13"></div>

            }
            else
            {
                <div class="field player2" id="tile @i"></div>

            }

        }
        @for (int i = 12; i >= 7; i--)
        {
            bool pieceFound = false;
            if (Model.PlayerList != null)
            {
                foreach (var player in Model.PlayerList)
                {
                    foreach (var piece in player.Piece)
                    {
                        int playerPosition = piece.Position + player.StartPosition;
                        if (playerPosition > 52)
                        {
                            playerPosition -= 52;
                        }
                        if (playerPosition == i && !pieceFound && piece.State == 1)
                        {
                            string playerId = "brick player" + (player.Id + 1).ToString();
                            string pieceId = "piece " + piece.PieceId.ToString();
                            <div class="field" id="tile @i">
                                <div class="@playerId" id="@pieceId"></div>
                            </div>
                            pieceFound = true;
                        }
                    }
                }
            }
            if (!pieceFound)
            {
                <div class="field" id="tile @i"></div>
            }

        }

    </div>
    <div class="wing" id="topWing">


        @for (int i = 27; i <= 32; i++)
        {
            bool pieceFound = false;
            if (Model.PlayerList != null)
            {
                foreach (var player in Model.PlayerList)
                {
                    foreach (var piece in player.Piece)
                    {
                        int playerPosition = piece.Position + player.StartPosition;
                        if (playerPosition > 52)
                        {
                            playerPosition -= 52;
                        }
                        if (playerPosition == i && !pieceFound && piece.State == 1)
                        {
                            string playerId = "brick player" + (player.Id + 1).ToString();
                            string pieceId = "piece " + piece.PieceId.ToString();
                            <div class="field" id="tile @i">
                                <div class="@playerId" id="@pieceId"></div>
                            </div>
                            pieceFound = true;
                        }
                    }
                }
            }
            if (!pieceFound)
            {
                <div class="field" id="tile @i"></div>
            }

        }
        @for (int i = 1; i <= 6; i++)
        {
            if (i == 1)
            {
                <div class="field player3" id="tile 26"></div>

            }
            else
            {
                <div class="field player3" id="b @i"></div>

            }

        }
        @for (int i = 25; i >= 20; i--)
        {
            bool pieceFound = false;
            if (Model.PlayerList != null)
            {
                foreach (var player in Model.PlayerList)
                {
                    foreach (var piece in player.Piece)
                    {
                        int playerPosition = piece.Position + player.StartPosition;
                        if (playerPosition > 52)
                        {
                            playerPosition -= 52;
                        }
                        if (playerPosition == i && !pieceFound && piece.State == 1)
                        {
                            string playerId = "brick player" + (player.Id + 1).ToString();
                            string pieceId = "piece " + piece.PieceId.ToString();
                            <div class="field" id="tile @i">
                                <div class="@playerId" id="@pieceId"></div>
                            </div>
                            pieceFound = true;
                        }
                    }
                }
            }
            if (!pieceFound)
            {
                <div class="field" id="tile @i"></div>
            }

        }


    </div>
    <div class="wing" id="rightWing">

        @for (int i = 40; i <= 45; i++)
        {
            bool pieceFound = false;
            if (Model.PlayerList != null)
            {
                foreach (var player in Model.PlayerList)
                {
                    foreach (var piece in player.Piece)
                    {
                        int playerPosition = piece.Position + player.StartPosition;
                        if (playerPosition > 52)
                        {
                            playerPosition -= 52;
                        }
                        if (playerPosition == i && !pieceFound && piece.State == 1)
                        {
                            string playerId = "brick player" + (player.Id + 1).ToString();
                            string pieceId = "piece " + piece.PieceId.ToString();
                            <div class="field" id="tile @i">
                                <div class="@playerId" id="@pieceId"></div>
                            </div>
                            pieceFound = true;
                        }
                    }
                }
            }
            if (!pieceFound)
            {
                <div class="field" id="tile @i"></div>
            }
        }
        @for (int i = 1; i <= 6; i++)
        {
            if (i == 1)
            {
                <div class="field player4" id="tile 39"></div>

            }
            else
            {

                <div class="field player4" id="r @i"></div>
            }
        }
        @for (int i = 38; i >= 33; i--)
        {
            bool pieceFound = false;
            if (Model.PlayerList != null)
            {
                foreach (var player in Model.PlayerList)
                {
                    foreach (var piece in player.Piece)
                    {
                        int playerPosition = piece.Position + player.StartPosition;
                        if (playerPosition > 52)
                        {
                            playerPosition -= 52;
                        }
                        if (playerPosition == i && !pieceFound && piece.State == 1)
                        {
                            string playerId = "brick player" + (player.Id + 1).ToString();
                            string pieceId = "piece " + piece.PieceId.ToString();
                            <div class="field" id="tile @i">
                                <div class="@playerId" id="@pieceId"></div>
                            </div>
                            pieceFound = true;
                        }
                    }
                }
            }
            if (!pieceFound)
            {
                <div class="field" id="tile @i"></div>
            }

        }

    </div>
    <div class="wing" id="bottomWing">

        @for (int i = 1; i <= 6; i++)
        {
            bool pieceFound = false;
            if (Model.PlayerList != null)
            {
                foreach (var player in Model.PlayerList)
                {
                    foreach (var piece in player.Piece)
                    {
                        int playerPosition = piece.Position + player.StartPosition;
                        if (playerPosition > 52)
                        {
                            playerPosition -= 52;
                        }
                        if (playerPosition == i && !pieceFound && piece.State == 1)
                        {
                            string playerId = "brick player" + (player.Id + 1).ToString();
                            string pieceId = "piece " + piece.PieceId.ToString();
                            <div class="field" id="tile @i">
                                <div class="@playerId" id="@pieceId"></div>
                            </div>
                            pieceFound = true;
                        }
                    }
                }
            }
            if (!pieceFound)
            {
                <div class="field" id="tile @i"></div>
            }


        }

        @for (int j = 1; j <= 6; j++)
        {
            if (j == 1)
            {
                <div class="field player1" id="r 52"></div>

            }
            else
            {
                <div class="field player1" id="r @j"></div>

            }

        }


        @for (int i = 51; i >= 46; i--)
        {

            bool pieceFound = false;
            if (Model.PlayerList != null)
            {
                foreach (var player in Model.PlayerList)
                {
                    foreach (var piece in player.Piece)
                    {
                        int playerPosition = piece.Position + player.StartPosition;
                        if (playerPosition > 52)
                        {
                            playerPosition -= 52;
                        }
                        if (playerPosition == i && !pieceFound && piece.State == 1)
                        {
                            string playerId = "brick player" + (player.Id + 1).ToString();
                            string pieceId = "piece " + piece.PieceId.ToString();
                            <div class="field" id="tile @i">
                                <div class="@playerId" id="@pieceId"></div>
                            </div>
                            pieceFound = true;
                        }
                    }
                }
            }
            if (!pieceFound)
            {
                <div class="field" id="tile @i"></div>
            }


        }

    </div>

    <div class="goal"></div>
    <div class="start player1">
        @for (int i = 1; i <= 4; i++)
        {
            if (Model.PlayerList != null)
            {
                for (int j = 0; j < Model.PlayerList.Count; j++)
                {
                    if (Model.PlayerList[j].Color == "Red")
                    {
                        if (Model.PlayerList[j].Piece[i - 1].State == 0)
                        {
                            <div class="field">
                                <div class="brick player1" id="piece @i"></div>
                            </div>
                        }
                        else
                        {
                            <div class="field"></div>
                        }
                    }
                }
            }

            else
            {
                <div class="field">
                    <div class="brick player1" id="piece @i"></div>
                </div>
            }
        }
    </div>

    <div class="start player2">
        @for (int i = 1; i <= 4; i++)
        {
            if (Model.PlayerList != null)
            {
                for (int j = 0; j < Model.PlayerList.Count; j++)
                {
                    if (Model.PlayerList[j].Color == "Green")
                    {
                        if (Model.PlayerList[j].Piece[i - 1].State == 0)
                        {
                            <div class="field">
                                <div class="brick player2" id="piece @i"></div>
                            </div>
                        }
                        else
                        {
                            <div class="field"></div>
                        }
                    }
                }
            }

            else
            {
                <div class="field">
                    <div class="brick player2" id="piece @i"></div>
                </div>
            }
        }

    </div>
    <div class="start player3">
        @for (int i = 1; i <= 4; i++)
        {
            if (Model.PlayerList != null)
            {
                for (int j = 0; j < Model.PlayerList.Count; j++)
                {
                    if (Model.PlayerList[j].Color == "Blue")
                    {
                        if (Model.PlayerList[j].Piece[i - 1].State == 0)
                        {
                            <div class="field">
                                <div class="brick player3" id="piece @i"></div>
                            </div>
                        }
                        else
                        {
                            <div class="field"></div>
                        }
                    }
                }
            }

            else
            {
                <div class="field">
                    <div class="brick player3" id="piece @i"></div>
                </div>
            }
        }

    </div>
    <div class="start player4">
        @for (int i = 1; i <= 4; i++)
        {
            if (Model.PlayerList != null)
            {
                for (int j = 0; j < Model.PlayerList.Count; j++)
                {
                    if (Model.PlayerList[j].Color == "Yellow")
                    {
                        if (Model.PlayerList[j].Piece[i - 1].State == 0)
                        {
                            <div class="field">
                                <div class="brick player4" id="piece @i"></div>
                            </div>
                        }
                        else
                        {
                            <div class="field"></div>
                        }
                    }
                }
            }

            else
            {
                <div class="field">
                    <div class="brick player4" id="piece @i"></div>
                </div>
            }
        }

    </div>
</div>
<script>window.onload=DiceThrow(@Model.DiceThrow)</script>



